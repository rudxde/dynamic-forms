{"version":3,"file":"dynamic-forms.js.map","sources":["ng://dynamic-forms/lib/components/abstract-form-field/abstract-form-field.component.ts","ng://dynamic-forms/lib/components/checkbox-element/checkbox-element.component.ts","ng://dynamic-forms/lib/components/form.component.ts","ng://dynamic-forms/lib/components/input-element/input-element.component.ts","ng://dynamic-forms/lib/components/radiogroup-element/radiogroup-element.component.ts","ng://dynamic-forms/lib/components/select-element/select-element.component.ts","ng://dynamic-forms/lib/components/slide-element/slide-element.component.ts","ng://dynamic-forms/lib/components/slider-element/slider-element.component.ts","ng://dynamic-forms/lib/dynamic-forms.module.ts"],"sourcesContent":["import { IInputField, IIndexedFormField, IFormField } from '../../interfaces/form-field';\nimport { FormGroup } from '@angular/forms';\nimport { Input } from '@angular/core';\n\nexport abstract class AbstractFormFieldComponent<T extends IFormField> {\n\n  @Input() XFormField: T & IIndexedFormField;\n  @Input() XFormGroup: FormGroup;\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\nimport { ICheckboxField } from '../../interfaces/form-field';\n\n@Component({\n  selector: 'dynamic-forms-checkbox-element',\n  templateUrl: './checkbox-element.component.html',\n  styleUrls: ['./checkbox-element.component.less']\n})\nexport class CheckboxElementComponent extends AbstractFormFieldComponent<ICheckboxField> implements OnInit {\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\nimport { IFormField, IIndexedFormField } from '../interfaces/form-field';\n\n@Component({\n  selector: 'dynamic-forms-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.less']\n})\nexport class FormComponent implements OnInit {\n\n  @Input() form: IFormField[];\n  @Input() submitButtonText: string;\n  @Input() abortButton: boolean;\n  @Input() abortButtonText: string;\n  @Input() result$: Subject<object>;\n\n  indexedFormDefinition: IIndexedFormField[];\n  myForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.indexedFormDefinition = this.setFormFieldIds(this.form);\n    const reactiveFormsObject = this.createReactiveFormsObject(this.indexedFormDefinition);\n    this.myForm = this.fb.group(reactiveFormsObject);\n  }\n\n  setFormFieldIds(form: IFormField[]): IIndexedFormField[] {\n    const result: IIndexedFormField[] = [];\n    for (let i = 0; i < form.length; i++) {\n      result.push({\n        ...form[i],\n        id: i\n      });\n    }\n    return result;\n  }\n\n\n  createReactiveFormsObject(form: IIndexedFormField[]): object {\n    const result = {};\n    for (const c of form) {\n      const defaultVal = c.default === undefined ? '' : c.default;\n      const validators = [];\n      if (c.validators) {\n        c.validators.forEach(validator => {\n          switch (validator.type) {\n            case 'email':\n              validators.push(Validators.email);\n              break;\n            case 'match':\n              validators.push(Validators.pattern(new RegExp(validator.immediate as string)));\n              break;\n            case 'max':\n              validators.push(Validators.max(validator.immediate as number));\n              break;\n            case 'min':\n              validators.push(Validators.min(validator.immediate as number));\n              break;\n            case 'maxLength':\n              validators.push(Validators.maxLength(validator.immediate as number));\n              break;\n            case 'minLength':\n              validators.push(Validators.minLength(validator.immediate as number));\n              break;\n            case 'required':\n              validators.push(Validators.required);\n              break;\n            case 'requiredTrue':\n              validators.push(Validators.requiredTrue);\n              break;\n          }\n        });\n      }\n      result[c.id] = [defaultVal, validators];\n    }\n    return result;\n  }\n\n  submitClick() {\n    this.result$.next(this.myForm.value);\n  }\n\n  abortClick() {\n    this.result$.error('abort');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IInputField } from '../../interfaces/form-field';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\n\n@Component({\n  selector: 'dynamic-forms-input-element',\n  templateUrl: './input-element.component.html',\n  styleUrls: ['./input-element.component.less']\n})\nexport class InputElementComponent extends AbstractFormFieldComponent<IInputField> implements OnInit {\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\nimport { IRadioGroupField } from '../../interfaces/form-field';\n\n@Component({\n  selector: 'dynamic-forms-radiogroup-element',\n  templateUrl: './radiogroup-element.component.html',\n  styleUrls: ['./radiogroup-element.component.less']\n})\nexport class RadiogroupElementComponent extends AbstractFormFieldComponent<IRadioGroupField> implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.XFormField.otherOption) {\n      console.warn('otherOption on radiogroup currently not supported!');\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ISelectField } from '../../interfaces/form-field';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\n\n@Component({\n  selector: 'dynamic-forms-select-element',\n  templateUrl: './select-element.component.html',\n  styleUrls: ['./select-element.component.less']\n})\nexport class SelectElementComponent extends AbstractFormFieldComponent<ISelectField> implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\nimport { ISlideField } from '../../interfaces/form-field';\n\n@Component({\n  selector: 'dynamic-forms-slide-element',\n  templateUrl: './slide-element.component.html',\n  styleUrls: ['./slide-element.component.less']\n})\nexport class SlideElementComponent extends AbstractFormFieldComponent<ISlideField> implements OnInit {\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ISliderField } from '../../interfaces/form-field';\nimport { AbstractFormFieldComponent } from '../abstract-form-field/abstract-form-field.component';\n\n@Component({\n  selector: 'dynamic-forms-slider-element',\n  templateUrl: './slider-element.component.html',\n  styleUrls: ['./slider-element.component.less']\n})\nexport class SliderElementComponent extends AbstractFormFieldComponent<ISliderField> implements OnInit {\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatInputModule,\n  MatButtonModule,\n  MatSliderModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatSlideToggleModule,\n} from '@angular/material';\nimport { CheckboxElementComponent } from './components/checkbox-element/checkbox-element.component';\nimport { FormComponent } from './components/form.component';\nimport { InputElementComponent } from './components/input-element/input-element.component';\nimport { RadiogroupElementComponent } from './components/radiogroup-element/radiogroup-element.component';\nimport { SelectElementComponent } from './components/select-element/select-element.component';\nimport { SlideElementComponent } from './components/slide-element/slide-element.component';\nimport { SliderElementComponent } from './components/slider-element/slider-element.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    CheckboxElementComponent,\n    FormComponent,\n    InputElementComponent,\n    RadiogroupElementComponent,\n    SelectElementComponent,\n    SlideElementComponent,\n    SliderElementComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    FormComponent\n  ]\n})\nexport class DynamicFormsModule { }\n"],"names":[],"mappings":"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"}
